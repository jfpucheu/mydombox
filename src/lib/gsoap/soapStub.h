/* soapStub.h
   Generated by gSOAP 2.8.15 from mydombox-2.0.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under ONE of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapStub_H
#define soapStub_H
#define SOAP_NAMESPACE_OF_ns1	"http://mydombox.com/mydombox/"
#include "stdsoap2.h"
#if GSOAP_VERSION != 20815
# error "GSOAP VERSION MISMATCH IN GENERATED CODE: PLEASE REINSTALL PACKAGE"
#endif

#ifdef __cplusplus
extern "C" {
#endif

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE__ns1__getLightingStatus
#define SOAP_TYPE__ns1__getLightingStatus (7)
/* ns1:getLightingStatus */
struct _ns1__getLightingStatus
{
	int DeviceID;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE__ns1__getLightingStatusResponse
#define SOAP_TYPE__ns1__getLightingStatusResponse (8)
/* ns1:getLightingStatusResponse */
struct _ns1__getLightingStatusResponse
{
	int DeviceID;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
	char *State;	/* required element of type xsd:string */
	int *Dim;	/* optional element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE__ns1__setLightingStatus
#define SOAP_TYPE__ns1__setLightingStatus (10)
/* ns1:setLightingStatus */
struct _ns1__setLightingStatus
{
	int DeviceID;	/* required element of type xsd:int */
	char *State;	/* required element of type xsd:string */
	int *Dim;	/* optional element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE__ns1__setLightingStatusResponse
#define SOAP_TYPE__ns1__setLightingStatusResponse (11)
/* ns1:setLightingStatusResponse */
struct _ns1__setLightingStatusResponse
{
	int DeviceID;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
	char *State;	/* required element of type xsd:string */
	int *Dim;	/* optional element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE__ns1__initDevice
#define SOAP_TYPE__ns1__initDevice (12)
/* ns1:initDevice */
struct _ns1__initDevice
{
	int DeviceID;	/* required element of type xsd:int */
	char *Order;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE__ns1__initDeviceResponse
#define SOAP_TYPE__ns1__initDeviceResponse (13)
/* ns1:initDeviceResponse */
struct _ns1__initDeviceResponse
{
	int DeviceID;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
	char *Order;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE___ns1__getLightingStatus
#define SOAP_TYPE___ns1__getLightingStatus (17)
/* Operation wrapper: */
struct __ns1__getLightingStatus
{
	struct _ns1__getLightingStatus *ns1__getLightingStatus;	/* optional element of type ns1:getLightingStatus */
};
#endif

#ifndef SOAP_TYPE___ns1__setLightingStatus
#define SOAP_TYPE___ns1__setLightingStatus (21)
/* Operation wrapper: */
struct __ns1__setLightingStatus
{
	struct _ns1__setLightingStatus *ns1__setLightingStatus;	/* optional element of type ns1:setLightingStatus */
};
#endif

#ifndef SOAP_TYPE___ns1__initDevice
#define SOAP_TYPE___ns1__initDevice (25)
/* Operation wrapper: */
struct __ns1__initDevice
{
	struct _ns1__initDevice *ns1__initDevice;	/* optional element of type ns1:initDevice */
};
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (26)
/* SOAP Header: */
struct SOAP_ENV__Header
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (27)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (29)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
	char *__any;
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (32)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (33)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Server-Side Operations                                                     *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 __ns1__getLightingStatus(struct soap*, struct _ns1__getLightingStatus *ns1__getLightingStatus, struct _ns1__getLightingStatusResponse *ns1__getLightingStatusResponse);

SOAP_FMAC5 int SOAP_FMAC6 __ns1__setLightingStatus(struct soap*, struct _ns1__setLightingStatus *ns1__setLightingStatus, struct _ns1__setLightingStatusResponse *ns1__setLightingStatusResponse);

SOAP_FMAC5 int SOAP_FMAC6 __ns1__initDevice(struct soap*, struct _ns1__initDevice *ns1__initDevice, struct _ns1__initDeviceResponse *ns1__initDeviceResponse);

/******************************************************************************\
 *                                                                            *
 * Server-Side Skeletons to Invoke Service Operations                         *
 *                                                                            *
\******************************************************************************/

SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__getLightingStatus(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__setLightingStatus(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__initDevice(struct soap*);

/******************************************************************************\
 *                                                                            *
 * Client-Side Call Stubs                                                     *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getLightingStatus(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _ns1__getLightingStatus *ns1__getLightingStatus, struct _ns1__getLightingStatusResponse *ns1__getLightingStatusResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__setLightingStatus(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _ns1__setLightingStatus *ns1__setLightingStatus, struct _ns1__setLightingStatusResponse *ns1__setLightingStatusResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__initDevice(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _ns1__initDevice *ns1__initDevice, struct _ns1__initDeviceResponse *ns1__initDeviceResponse);

#ifdef __cplusplus
}
#endif

#endif

/* End of soapStub.h */
